package logic.card;

import logic.game.CardColor;
import logic.game.CardSymbol;
import logic.game.GameLogic;

import java.util.ArrayList;

//You CAN modify the first line
public class DrawFourCard extends EffectCard {

	public DrawFourCard() {
		super(null, CardSymbol.DRAW_FOUR);
	}

	@Override
public String performEffect() {
		
		String b = "one";
		BaseCard onHand = new DrawFourCard();
		gameInstance.incrementDrawAmount(4);
		System.out.println(gameInstance.getDrawAmount());
		if (gameInstance.getCurrentPlayerHand().isEmpty()) {
			this.setColor(CardColor.RED);
		} else if(gameInstance.getCurrentPlayerHand().get(0).getColor() == null){
			this.setColor(CardColor.RED);
		}
		else {
			this.setColor(gameInstance.getCurrentPlayerHand().get(0).getColor());
		}
		gameInstance.setTopCard(this);
		gameInstance.goToNextPlayer();
		while(true){
		if (gameInstance.getCurrentPlayerHand().size() == 0) gameInstance.goToNextPlayer();
		else  break;
	}	
		System.out.println("Top "+gameInstance.getTopCard());
		System.out.println("Player " + gameInstance.getCurrentPlayer()+" = " + gameInstance.getCurrentPlayerHand().get(0).getSymbol());
		
		for (BaseCard onCard :gameInstance.getCurrentPlayerHand()) {
			switch (onCard.getSymbol()) {	
			case DRAW_FOUR : b = "four";onHand = onCard;
			default:
			}
			if (b!= "one") break;
		}
		String setColor = "Set color to " + gameInstance.getTopCard().getColor()+"\n";
		System.out.println("Player " + gameInstance.getCurrentPlayer()+" = " + onHand.toString() +"\n"+b);
		String message = "Player " + gameInstance.getCurrentPlayer() + " played DRAW FOUR. "
			+ (gameInstance.getCurrentPlayerHand().size()-1) + " cards remaining.\n";
//		message += setColor;
		switch(b) {
		case "four":return setColor + message + onHand.play();
		default: 
		int drawAmount = gameInstance.getDrawAmount();
		gameInstance.getCurrentPlayerHand().addAll(gameInstance.draw(drawAmount));
		gameInstance.setDrawAmount(0);
		return setColor +
				"Player " + gameInstance.getCurrentPlayer() + " drew " + drawAmount + " cards. "
				+ gameInstance.getCurrentPlayerHand().size() + " cards remaining.";	
		}

	}

	@Override
	public String toString() {
		if (this.getColor() != null) {
			return "DRAW FOUR (" + this.getColor().toString() + " color selected)";
		}
		return "DRAW FOUR";
	}

	@Override
	public boolean canPlay() {
		return true;
	}


}
