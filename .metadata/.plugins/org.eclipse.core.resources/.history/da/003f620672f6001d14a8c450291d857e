package Game.Scene;

import java.util.ArrayList;
import java.util.Comparator;

import Game.logic.BagItem;
import Game.logic.GameUtil;
import Game.logic.Pickaxe;
import Game.logic.Stackable;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.Background;
import javafx.scene.layout.BackgroundFill;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;

public class EnchantScene {
	
	public static ArrayList<StackPane> itemSlot = new ArrayList<>();
	public static Scene enchant ;
	public static VBox PlayerStatus;
	public static Pickaxe target;
	
	public static void Scene() {
		target = GameUtil.user.getWeapon();
		HBox layout = new HBox();
		
		Text head = new Text("Enchantment");
		head.setFont(Font.font("Colonna MT", FontWeight.BOLD, 60));
		StackPane s = new StackPane(head);
		s.setPrefHeight(100);
		
		PlayerStatus = new VBox();
		PlayerStatus.setSpacing(20);
		PlayerStatus.setAlignment(Pos.TOP_LEFT);
		PlayerStatus.setBackground(new Background(new BackgroundFill(Color.LINEN, null, new Insets(10,0,10,10))));
		PlayerStatus.setPadding(new Insets(20));
		
		PlayerStatus.getChildren().add(GameUtil.newText(25, null));
		PlayerStatus.getChildren().add(GameUtil.newText(25, null));
		PlayerStatus.getChildren().add(new StackPane(new Rectangle(64, 64, Color.LIGHTGRAY),GameUtil.user.getWeapon().getIcon(64, 64)));
		PlayerStatus.getChildren().add(GameUtil.newText(20, null));
		PlayerStatus.getChildren().add(GameUtil.newText(20, null));
		PlayerStatus.getChildren().add(GameUtil.newText(20, null));
		
		
		Button upgrade = new Button("upgrade");
		upgrade.setFont(Font.font("Colonna MT", FontWeight.NORMAL, 20));
		PlayerStatus.getChildren().add(new StackPane(upgrade));
		upgrade.setAlignment(Pos.CENTER);
		upgrade.setOnMouseClicked(event ->{
			
			GameUtil.Upgrade(target);
			update();
		});
		PlayerStatus.getChildren().add(GameUtil.newText(20, null));
		
		VBox player = new VBox(s,GameUtil.newText(40, "WeaponStats"),PlayerStatus);
		player.setPrefWidth(400);
		player.setSpacing(20);
		player.setAlignment(Pos.TOP_CENTER);
		player.setPadding(new Insets(20));
		player.setBackground(new Background(new BackgroundFill(Color.BISQUE, null, new Insets(10,0,10,10))));

		
		GridPane bagSlot = new GridPane();
		bagSlot.setPadding(new Insets(25,0,0,0));
		bagSlot.setAlignment(Pos.TOP_CENTER);
		bagSlot.setVgap(10);
		bagSlot.setHgap(10);
		bagSlot.setPrefWidth(600);
		bagSlot.setBackground(new Background(new BackgroundFill(Color.BLACK, null, new Insets(10))));
		
		for (int i = 0; i < 8; i++) {
			for (int j = 0; j <8; j++) {
				StackPane show = new StackPane();
				show.setAlignment(Pos.CENTER);
				show.setPrefSize(60, 60);
				show.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY, null, null)));
				bagSlot.add(show, j, i);
				itemSlot.add(show);
			}
			
		}
		
		Button back = new Button("Back");
		back.setOnMouseClicked(event -> {target = GameUtil.user.getWeapon();HomeScene.update();((Text) PlayerStatus.getChildren().get(7)).setText("");});
		bagSlot.add(back, 7, 8);
		
		
		layout.setBackground(new Background(new BackgroundFill(Color.DEEPSKYBLUE, null, null)));
		layout.getChildren().addAll(player,bagSlot);

		Scene scene = new Scene(layout, 1000, 700);
		enchant = scene;
	}
	
	public static void update() {
		GameUtil.user.getBag().getAllItem().sort(Comparator.comparing(BagItem::getId));
		
		((Text) PlayerStatus.getChildren().get(0)).setText("Attack : " + target.getDamage());
		((Text) PlayerStatus.getChildren().get(1)).setText("Weapon : "+target.getName());
		((Pane) PlayerStatus.getChildren().get(2)).getChildren().set(1,target.getIcon(64, 64));
		((Text) PlayerStatus.getChildren().get(3)).setText("Minarals : " + target.getMineral() + " " + (int) Math.pow(2,target.getPlus()) +" bars");
		((Text) PlayerStatus.getChildren().get(4)).setText("Rate : "+ 100 / Math.pow(2,target.getPlus()) + "%");
		((Text) PlayerStatus.getChildren().get(5)).setText("Evlove "+ target.getEnchantCount()  + " / " +target.getNextEvoTime());
	ArrayList<BagItem> allItem = GameUtil.user.getBag().getAllItem();
	for (StackPane i : itemSlot) {
		i.getChildren().clear();
	}
	
	for (int i = 0; i < allItem.size(); i++) {
		itemSlot.get(i).getChildren().clear();
		if(allItem.get(i).equals(target)) {
			itemSlot.get(i).getChildren().add(new Rectangle(55, 55, Color.GOLD));
		}
		else {int a = i;
		Rectangle box = new Rectangle(55, 55, Color.WHITE);
		if( allItem.get(i) instanceof Pickaxe) {
			box.setOnMouseClicked(event->{
				target = (Pickaxe) allItem.get(a);
				update();
			});
		}
			itemSlot.get(i).getChildren().add(box);
		}
		itemSlot.get(i).getChildren().add(allItem.get(i).getIcon(48, 48));
		if(allItem.get(i) instanceof Stackable) {
			StackPane amount = new StackPane(new Text("" +((Stackable) allItem.get(i)).getAmount()));
			amount.setPadding(new Insets(7));
			amount.setAlignment(Pos.BOTTOM_RIGHT);
			itemSlot.get(i).getChildren().add(amount);
		}
	}
	
	GameUtil.game.setScene(enchant);
}
}
